{
  "contractName": "LIBWrapper",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogLIBUnwrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogLIBWrapped",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "LIBToken",
      "outputs": [
        {
          "internalType": "contract LIB",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "wrap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060405161001d9061007e565b604051809103906000f080158015610039573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008b565b612ab98061077d83390190565b6106e38061009a6000396000f3fe6080604052600436106100385760003560e01c80631ba3192b14610051578063d46eb1191461007c578063de0e9a3e1461008657610047565b36610047576100456100af565b005b61004f6100af565b005b34801561005d57600080fd5b506100666101ba565b6040516100739190610568565b60405180910390f35b6100846100af565b005b34801561009257600080fd5b506100ad60048036038101906100a89190610432565b6101de565b005b600034116100f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e990610583565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933346040518363ffffffff1660e01b815260040161014d92919061053f565b600060405180830381600087803b15801561016757600080fd5b505af115801561017b573d6000803e3d6000fd5b505050507f9c1359f4b53f71481ac276ccdffa0cc71cd40491a5b8636617ecd8e25d42e2b833346040516101b092919061053f565b60405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610221576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610218906105a3565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161027e93929190610508565b602060405180830381600087803b15801561029857600080fd5b505af11580156102ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d09190610409565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040161032a91906105c3565b600060405180830381600087803b15801561034457600080fd5b505af1158015610358573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103a2573d6000803e3d6000fd5b507f434a87dd0568dfbbb4bc8b6b51b072be25ff126809317b293b9ed43aaa84fd0e33826040516103d492919061053f565b60405180910390a150565b6000815190506103ee8161067f565b92915050565b60008135905061040381610696565b92915050565b60006020828403121561041b57600080fd5b6000610429848285016103df565b91505092915050565b60006020828403121561044457600080fd5b6000610452848285016103f4565b91505092915050565b61046481610625565b82525050565b61047381610637565b82525050565b6000610486601a836105de565b91507f5765206e65656420746f2077726170206174206c6561737420310000000000006000830152602082019050919050565b60006104c6601c836105de565b91507f5765206e65656420746f20756e77726170206174206c656173742031000000006000830152602082019050919050565b6105028161061b565b82525050565b600060608201905061051d600083018661045b565b61052a602083018561045b565b61053760408301846104f9565b949350505050565b6000604082019050610554600083018561045b565b61056160208301846104f9565b9392505050565b600060208201905061057d600083018461046a565b92915050565b6000602082019050818103600083015261059c81610479565b9050919050565b600060208201905081810360008301526105bc816104b9565b9050919050565b60006020820190506105d860008301846104f9565b92915050565b600082825260208201905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106308261065b565b9050919050565b600061064282610649565b9050919050565b6000610654826105fb565b9050919050565b60006106668261066d565b9050919050565b6000610678826105fb565b9050919050565b610688816105ef565b811461069357600080fd5b50565b61069f8161061b565b81146106aa57600080fd5b5056fea264697066735822122078c174c35cd454272caa1cc87ee5862a9758facd40f283dd794f2a8ffdcb259664736f6c6343000705003360806040523480156200001157600080fd5b506040518060400160405280600d81526020017f4c69627261727920546f6b656e000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c4942000000000000000000000000000000000000000000000000000000000081525081818160049080519060200190620000989291906200032f565b508060059080519060200190620000b19291906200032f565b506012600660006101000a81548160ff021916908360ff16021790555050506000600660016101000a81548160ff0219169083151502179055506200010f6000801b620001036200019960201b60201c565b620001a160201b60201c565b620001507f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620001446200019960201b60201c565b620001a160201b60201c565b620001917f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620001856200019960201b60201c565b620001a160201b60201c565b5050620003e5565b600033905090565b620001b38282620001b760201b60201c565b5050565b620001e5816000808581526020019081526020016000206000016200025a60201b62000f161790919060201c565b156200025657620001fb6200019960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006200028a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200029260201b60201c565b905092915050565b6000620002a683836200030c60201b60201c565b6200030157826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000306565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620003675760008555620003b3565b82601f106200038257805160ff1916838001178555620003b3565b82800160010185558215620003b3579182015b82811115620003b257825182559160200191906001019062000395565b5b509050620003c29190620003c6565b5090565b5b80821115620003e1576000816000905550600101620003c7565b5090565b6126c480620003f56000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d5391393146104e2578063d547741f14610500578063dd62ed3e1461051c578063e63ab1e91461054c576101a9565b8063a457c2d714610452578063a9059cbb14610482578063ca15c873146104b2576101a9565b80639010d07c116100d35780639010d07c146103b657806391d14854146103e657806395d89b4114610416578063a217fddf14610434576101a9565b806370a082311461036057806379cc6790146103905780638456cb59146103ac576101a9565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a1461030057806340c10f191461030a57806342966c68146103265780635c975abb14610342576101a9565b8063313ce5671461029657806336568abe146102b457806339509351146102d0576101a9565b806306fdde03146101ae578063095ea7b3146101cc57806318160ddd146101fc57806323b872dd1461021a578063248a9ca31461024a5780632f2ff15d1461027a575b600080fd5b6101b661056a565b6040516101c3919061224a565b60405180910390f35b6101e660048036038101906101e1919061206f565b61060c565b6040516101f39190612214565b60405180910390f35b61020461062a565b604051610211919061226c565b60405180910390f35b610234600480360381019061022f9190612020565b610634565b6040516102419190612214565b60405180910390f35b610264600480360381019061025f91906120ab565b61070d565b604051610271919061222f565b60405180910390f35b610294600480360381019061028f91906120d4565b61072c565b005b61029e6107b5565b6040516102ab9190612287565b60405180910390f35b6102ce60048036038101906102c991906120d4565b6107cc565b005b6102ea60048036038101906102e5919061206f565b610865565b6040516102f79190612214565b60405180910390f35b610308610918565b005b610324600480360381019061031f919061206f565b6109a8565b005b610340600480360381019061033b919061214c565b610a3c565b005b61034a610a50565b6040516103579190612214565b60405180910390f35b61037a60048036038101906103759190611fbb565b610a67565b604051610387919061226c565b60405180910390f35b6103aa60048036038101906103a5919061206f565b610ab0565b005b6103b4610b12565b005b6103d060048036038101906103cb9190612110565b610ba2565b6040516103dd91906121f9565b60405180910390f35b61040060048036038101906103fb91906120d4565b610bd3565b60405161040d9190612214565b60405180910390f35b61041e610c04565b60405161042b919061224a565b60405180910390f35b61043c610ca6565b604051610449919061222f565b60405180910390f35b61046c6004803603810190610467919061206f565b610cad565b6040516104799190612214565b60405180910390f35b61049c6004803603810190610497919061206f565b610d7a565b6040516104a99190612214565b60405180910390f35b6104cc60048036038101906104c791906120ab565b610d98565b6040516104d9919061226c565b60405180910390f35b6104ea610dbe565b6040516104f7919061222f565b60405180910390f35b61051a600480360381019061051591906120d4565b610de2565b005b61053660048036038101906105319190611fe4565b610e6b565b604051610543919061226c565b60405180910390f35b610554610ef2565b604051610561919061222f565b60405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106025780601f106105d757610100808354040283529160200191610602565b820191906000526020600020905b8154815290600101906020018083116105e557829003601f168201915b5050505050905090565b6000610620610619610f46565b8484610f4e565b6001905092915050565b6000600354905090565b6000610641848484611145565b6107028461064d610f46565b6106fd856040518060600160405280602881526020016124ee60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106b3610f46565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461140a9092919063ffffffff16565b610f4e565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b6107526000808481526020019081526020016000206002015461074d610f46565b610bd3565b6107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806123ec602f913960400191505060405180910390fd5b6107b182826114c4565b5050565b6000600660009054906101000a900460ff16905090565b6107d4610f46565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612636602f913960400191505060405180910390fd5b6108618282611557565b5050565b600061090e610872610f46565b846109098560026000610883610f46565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115ea90919063ffffffff16565b610f4e565b6001905092915050565b6109497f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610944610f46565b610bd3565b61099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603981526020018061243d6039913960400191505060405180910390fd5b6109a6611672565b565b6109d97f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109d4610f46565b610bd3565b610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806125166036913960400191505060405180910390fd5b610a38828261175d565b5050565b610a4d610a47610f46565b82611926565b50565b6000600660019054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610aef8260405180606001604052806024815260200161254c60249139610ae086610adb610f46565b610e6b565b61140a9092919063ffffffff16565b9050610b0383610afd610f46565b83610f4e565b610b0d8383611926565b505050565b610b437f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b3e610f46565b610bd3565b610b98576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806125da6037913960400191505060405180910390fd5b610ba0611aec565b565b6000610bcb82600080868152602001908152602001600020600001611bd890919063ffffffff16565b905092915050565b6000610bfc82600080868152602001908152602001600020600001611bf290919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c9c5780601f10610c7157610100808354040283529160200191610c9c565b820191906000526020600020905b815481529060010190602001808311610c7f57829003601f168201915b5050505050905090565b6000801b81565b6000610d70610cba610f46565b84610d6b856040518060600160405280602581526020016126116025913960026000610ce4610f46565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461140a9092919063ffffffff16565b610f4e565b6001905092915050565b6000610d8e610d87610f46565b8484611145565b6001905092915050565b6000610db7600080848152602001908152602001600020600001611c22565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610e0860008084815260200190815260200160002060020154610e03610f46565b610bd3565b610e5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806124be6030913960400191505060405180910390fd5b610e678282611557565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000610f3e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611c37565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fd4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806125b66024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561105a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806124766022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806125916025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611251576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806123c96023913960400191505060405180910390fd5b61125c838383611ca7565b6112c88160405180606001604052806026815260200161249860269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461140a9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061135d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115ea90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906114b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561147c578082015181840152602081019050611461565b50505050905090810190601f1680156114a95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b6114eb81600080858152602001908152602001600020600001610f1690919063ffffffff16565b15611553576114f8610f46565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61157e81600080858152602001908152602001600020600001611cb790919063ffffffff16565b156115e65761158b610f46565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015611668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61167a610a50565b6116ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611730610f46565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611800576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61180c60008383611ca7565b611821816003546115ea90919063ffffffff16565b60038190555061187981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115ea90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806125706021913960400191505060405180910390fd5b6119b882600083611ca7565b611a248160405180606001604052806022815260200161241b60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461140a9092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a7c81600354611ce790919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b611af4610a50565b15611b67576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611bab610f46565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000611be78360000183611d6a565b60001c905092915050565b6000611c1a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611ded565b905092915050565b6000611c3082600001611e10565b9050919050565b6000611c438383611ded565b611c9c578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611ca1565b600090505b92915050565b611cb2838383611e21565b505050565b6000611cdf836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611e8f565b905092915050565b600082821115611d5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600081836000018054905011611dcb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806123a76022913960400191505060405180910390fd5b826000018281548110611dda57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b611e2c838383611f77565b611e34610a50565b15611e8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612665602a913960400191505060405180910390fd5b505050565b60008083600101600084815260200190815260200160002054905060008114611f6b5760006001820390506000600186600001805490500390506000866000018281548110611eda57fe5b9060005260206000200154905080876000018481548110611ef757fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611f2f57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611f71565b60009150505b92915050565b505050565b600081359050611f8b81612361565b92915050565b600081359050611fa081612378565b92915050565b600081359050611fb58161238f565b92915050565b600060208284031215611fcd57600080fd5b6000611fdb84828501611f7c565b91505092915050565b60008060408385031215611ff757600080fd5b600061200585828601611f7c565b925050602061201685828601611f7c565b9150509250929050565b60008060006060848603121561203557600080fd5b600061204386828701611f7c565b935050602061205486828701611f7c565b925050604061206586828701611fa6565b9150509250925092565b6000806040838503121561208257600080fd5b600061209085828601611f7c565b92505060206120a185828601611fa6565b9150509250929050565b6000602082840312156120bd57600080fd5b60006120cb84828501611f91565b91505092915050565b600080604083850312156120e757600080fd5b60006120f585828601611f91565b925050602061210685828601611f7c565b9150509250929050565b6000806040838503121561212357600080fd5b600061213185828601611f91565b925050602061214285828601611fa6565b9150509250929050565b60006020828403121561215e57600080fd5b600061216c84828501611fa6565b91505092915050565b61217e816122be565b82525050565b61218d816122d0565b82525050565b61219c816122dc565b82525050565b60006121ad826122a2565b6121b781856122ad565b93506121c781856020860161231d565b6121d081612350565b840191505092915050565b6121e481612306565b82525050565b6121f381612310565b82525050565b600060208201905061220e6000830184612175565b92915050565b60006020820190506122296000830184612184565b92915050565b60006020820190506122446000830184612193565b92915050565b6000602082019050818103600083015261226481846121a2565b905092915050565b600060208201905061228160008301846121db565b92915050565b600060208201905061229c60008301846121ea565b92915050565b600081519050919050565b600082825260208201905092915050565b60006122c9826122e6565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561233b578082015181840152602081019050612320565b8381111561234a576000848401525b50505050565b6000601f19601f8301169050919050565b61236a816122be565b811461237557600080fd5b50565b612381816122dc565b811461238c57600080fd5b50565b61239881612306565b81146123a357600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a264697066735822122070923f384ccc43cb207e4245fd3a14ac0e328847dd373739dc65ce801958b00364736f6c63430007050033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c80631ba3192b14610051578063d46eb1191461007c578063de0e9a3e1461008657610047565b36610047576100456100af565b005b61004f6100af565b005b34801561005d57600080fd5b506100666101ba565b6040516100739190610568565b60405180910390f35b6100846100af565b005b34801561009257600080fd5b506100ad60048036038101906100a89190610432565b6101de565b005b600034116100f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e990610583565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933346040518363ffffffff1660e01b815260040161014d92919061053f565b600060405180830381600087803b15801561016757600080fd5b505af115801561017b573d6000803e3d6000fd5b505050507f9c1359f4b53f71481ac276ccdffa0cc71cd40491a5b8636617ecd8e25d42e2b833346040516101b092919061053f565b60405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610221576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610218906105a3565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161027e93929190610508565b602060405180830381600087803b15801561029857600080fd5b505af11580156102ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d09190610409565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040161032a91906105c3565b600060405180830381600087803b15801561034457600080fd5b505af1158015610358573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103a2573d6000803e3d6000fd5b507f434a87dd0568dfbbb4bc8b6b51b072be25ff126809317b293b9ed43aaa84fd0e33826040516103d492919061053f565b60405180910390a150565b6000815190506103ee8161067f565b92915050565b60008135905061040381610696565b92915050565b60006020828403121561041b57600080fd5b6000610429848285016103df565b91505092915050565b60006020828403121561044457600080fd5b6000610452848285016103f4565b91505092915050565b61046481610625565b82525050565b61047381610637565b82525050565b6000610486601a836105de565b91507f5765206e65656420746f2077726170206174206c6561737420310000000000006000830152602082019050919050565b60006104c6601c836105de565b91507f5765206e65656420746f20756e77726170206174206c656173742031000000006000830152602082019050919050565b6105028161061b565b82525050565b600060608201905061051d600083018661045b565b61052a602083018561045b565b61053760408301846104f9565b949350505050565b6000604082019050610554600083018561045b565b61056160208301846104f9565b9392505050565b600060208201905061057d600083018461046a565b92915050565b6000602082019050818103600083015261059c81610479565b9050919050565b600060208201905081810360008301526105bc816104b9565b9050919050565b60006020820190506105d860008301846104f9565b92915050565b600082825260208201905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106308261065b565b9050919050565b600061064282610649565b9050919050565b6000610654826105fb565b9050919050565b60006106668261066d565b9050919050565b6000610678826105fb565b9050919050565b610688816105ef565b811461069357600080fd5b50565b61069f8161061b565b81146106aa57600080fd5b5056fea264697066735822122078c174c35cd454272caa1cc87ee5862a9758facd40f283dd794f2a8ffdcb259664736f6c63430007050033",
  "sourceMap": "105:756:1:-:0;;;272:55;;;;;;;;;;311:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;300:8;;:20;;;;;;;;;;;;;;;;;;105:756;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "105:756:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:6;:4;:6::i;:::-;105:756;;848:6;:4;:6::i;:::-;105:756;128:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;331:177;;;:::i;:::-;;514:253;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;331:177;386:1;374:9;:13;366:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;423:8;;;;;;;;;;:13;;;437:10;449:9;423:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468;482:10;494:9;468:36;;;;;;;:::i;:::-;;;;;;;;331:177::o;128:19::-;;;;;;;;;;;;:::o;514:253::-;569:1;561:5;:9;553:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;608:8;;;;;;;;;;:21;;;630:10;650:4;657:5;608:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;667:8;;;;;;;;;;:13;;;681:5;667:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:10;:19;;:26;714:5;694:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:34;745:10;757:5;729:34;;;;;;;:::i;:::-;;;;;;;;514:253;:::o;7:137:15:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:276::-;;411:2;399:9;390:7;386:23;382:32;379:2;;;427:1;424;417:12;379:2;469:1;493:61;546:7;537:6;526:9;522:22;493:61;:::i;:::-;483:71;;441:123;369:202;;;;:::o;577:260::-;;685:2;673:9;664:7;660:23;656:32;653:2;;;701:1;698;691:12;653:2;743:1;767:53;812:7;803:6;792:9;788:22;767:53;:::i;:::-;757:63;;715:115;643:194;;;;:::o;843:147::-;938:45;977:5;938:45;:::i;:::-;933:3;926:58;916:74;;:::o;996:151::-;1093:47;1134:5;1093:47;:::i;:::-;1088:3;1081:60;1071:76;;:::o;1153:324::-;;1316:67;1380:2;1375:3;1316:67;:::i;:::-;1309:74;;1413:28;1409:1;1404:3;1400:11;1393:49;1468:2;1463:3;1459:12;1452:19;;1299:178;;;:::o;1483:326::-;;1646:67;1710:2;1705:3;1646:67;:::i;:::-;1639:74;;1743:30;1739:1;1734:3;1730:11;1723:51;1800:2;1795:3;1791:12;1784:19;;1629:180;;;:::o;1815:118::-;1902:24;1920:5;1902:24;:::i;:::-;1897:3;1890:37;1880:53;;:::o;1939:474::-;;2142:2;2131:9;2127:18;2119:26;;2155:79;2231:1;2220:9;2216:17;2207:6;2155:79;:::i;:::-;2244:80;2320:2;2309:9;2305:18;2296:6;2244:80;:::i;:::-;2334:72;2402:2;2391:9;2387:18;2378:6;2334:72;:::i;:::-;2109:304;;;;;;:::o;2419:348::-;;2586:2;2575:9;2571:18;2563:26;;2599:79;2675:1;2664:9;2660:17;2651:6;2599:79;:::i;:::-;2688:72;2756:2;2745:9;2741:18;2732:6;2688:72;:::i;:::-;2553:214;;;;;:::o;2773:242::-;;2914:2;2903:9;2899:18;2891:26;;2927:81;3005:1;2994:9;2990:17;2981:6;2927:81;:::i;:::-;2881:134;;;;:::o;3021:419::-;;3225:2;3214:9;3210:18;3202:26;;3274:9;3268:4;3264:20;3260:1;3249:9;3245:17;3238:47;3302:131;3428:4;3302:131;:::i;:::-;3294:139;;3192:248;;;:::o;3446:419::-;;3650:2;3639:9;3635:18;3627:26;;3699:9;3693:4;3689:20;3685:1;3674:9;3670:17;3663:47;3727:131;3853:4;3727:131;:::i;:::-;3719:139;;3617:248;;;:::o;3871:222::-;;4002:2;3991:9;3987:18;3979:26;;4015:71;4083:1;4072:9;4068:17;4059:6;4015:71;:::i;:::-;3969:124;;;;:::o;4099:169::-;;4217:6;4212:3;4205:19;4257:4;4252:3;4248:14;4233:29;;4195:73;;;;:::o;4274:90::-;;4351:5;4344:13;4337:21;4326:32;;4316:48;;;:::o;4370:126::-;;4447:42;4440:5;4436:54;4425:65;;4415:81;;;:::o;4502:77::-;;4568:5;4557:16;;4547:32;;;:::o;4585:134::-;;4676:37;4707:5;4676:37;:::i;:::-;4663:50;;4653:66;;;:::o;4725:146::-;;4818:47;4859:5;4818:47;:::i;:::-;4805:60;;4795:76;;;:::o;4877:123::-;;4970:24;4988:5;4970:24;:::i;:::-;4957:37;;4947:53;;;:::o;5006:126::-;;5089:37;5120:5;5089:37;:::i;:::-;5076:50;;5066:66;;;:::o;5138:113::-;;5221:24;5239:5;5221:24;:::i;:::-;5208:37;;5198:53;;;:::o;5257:116::-;5327:21;5342:5;5327:21;:::i;:::-;5320:5;5317:32;5307:2;;5363:1;5360;5353:12;5307:2;5297:76;:::o;5379:122::-;5452:24;5470:5;5452:24;:::i;:::-;5445:5;5442:35;5432:2;;5491:1;5488;5481:12;5432:2;5422:79;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.7.0;\npragma abicoder v2;\n\nimport \"./LIB.sol\";\n\ncontract LIBWrapper {\n\tLIB public LIBToken;\n    \n    event LogLIBWrapped(address sender, uint256 amount);\n    event LogLIBUnwrapped(address sender, uint256 amount);\n\n\tconstructor() public {\n\t    LIBToken = new LIB();\n    }\n\t\n\tfunction wrap() public payable {\n\t\trequire(msg.value > 0, \"We need to wrap at least 1\");\n\n\t\tLIBToken.mint(msg.sender, msg.value);\n\t\temit LogLIBWrapped(msg.sender, msg.value);\n\t}\n\n    function unwrap(uint value) public {\n\t\trequire(value > 0, \"We need to unwrap at least 1\");\n\n\t\tLIBToken.transferFrom(msg.sender, address(this), value);\n\t\tLIBToken.burn(value);\n\t\t\n\t\tmsg.sender.transfer(value);\n\t\temit LogLIBUnwrapped(msg.sender, value);\n\t}\n\n\t receive() external payable {\n\t\twrap();\n\t} \n\n\tfallback() external payable {\n\t\twrap();\n\t} \n}",
  "sourcePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIBWrapper.sol",
  "ast": {
    "absolutePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIBWrapper.sol",
    "exportedSymbols": {
      "AccessControl": [
        813
      ],
      "Address": [
        2387
      ],
      "Context": [
        2410
      ],
      "ERC20": [
        1917
      ],
      "ERC20Burnable": [
        1976
      ],
      "ERC20Pausable": [
        2013
      ],
      "ERC20PresetMinterPauser": [
        1414
      ],
      "EnumerableSet": [
        2902
      ],
      "IERC20": [
        2091
      ],
      "LIB": [
        14
      ],
      "LIBWrapper": [
        130
      ],
      "Pausable": [
        2994
      ],
      "SafeMath": [
        1278
      ]
    },
    "id": 131,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:1"
      },
      {
        "id": 17,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:19:1"
      },
      {
        "absolutePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIB.sol",
        "file": "./LIB.sol",
        "id": 18,
        "nodeType": "ImportDirective",
        "scope": 131,
        "sourceUnit": 15,
        "src": "84:19:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          14
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 130,
        "linearizedBaseContracts": [
          130
        ],
        "name": "LIBWrapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1ba3192b",
            "id": 20,
            "mutability": "mutable",
            "name": "LIBToken",
            "nodeType": "VariableDeclaration",
            "scope": 130,
            "src": "128:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LIB_$14",
              "typeString": "contract LIB"
            },
            "typeName": {
              "id": 19,
              "name": "LIB",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14,
              "src": "128:3:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LIB_$14",
                "typeString": "contract LIB"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 26,
            "name": "LogLIBWrapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "178:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "178:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "194:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "177:32:1"
            },
            "src": "158:52:1"
          },
          {
            "anonymous": false,
            "id": 32,
            "name": "LogLIBUnwrapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "237:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "253:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "236:32:1"
            },
            "src": "215:54:1"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "293:34:1",
              "statements": [
                {
                  "expression": {
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "LIBToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "300:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$14",
                        "typeString": "contract LIB"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "311:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LIB_$14_$",
                          "typeString": "function () returns (contract LIB)"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "LIB",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 14,
                          "src": "315:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "311:9:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$14",
                        "typeString": "contract LIB"
                      }
                    },
                    "src": "300:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LIB_$14",
                      "typeString": "contract LIB"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "300:20:1"
                }
              ]
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:2:1"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:0:1"
            },
            "scope": 130,
            "src": "272:55:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "362:146:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "374:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "374:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "386:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "374:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5765206e65656420746f2077726170206174206c656173742031",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "389:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbce20a9b31517d228def20cff0e8f7f53f5c5d2d95f3ddd657b173c5b14dd63",
                          "typeString": "literal_string \"We need to wrap at least 1\""
                        },
                        "value": "We need to wrap at least 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbce20a9b31517d228def20cff0e8f7f53f5c5d2d95f3ddd657b173c5b14dd63",
                          "typeString": "literal_string \"We need to wrap at least 1\""
                        }
                      ],
                      "id": 45,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "366:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "366:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "366:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 56,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "437:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "437:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 58,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "449:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "449:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "423:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1358,
                      "src": "423:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "423:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "482:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "482:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 65,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "494:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "494:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62,
                      "name": "LogLIBWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "468:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "468:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "EmitStatement",
                  "src": "463:41:1"
                }
              ]
            },
            "functionSelector": "d46eb119",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:2:1"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:0:1"
            },
            "scope": 130,
            "src": "331:177:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "549:218:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "561:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "569:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "561:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5765206e65656420746f20756e77726170206174206c656173742031",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "572:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce4e9497dbbfa061a8428a27e3c49453cb6d5ad0b6f6eb43d4877a083e5d532f",
                          "typeString": "literal_string \"We need to unwrap at least 1\""
                        },
                        "value": "We need to unwrap at least 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce4e9497dbbfa061a8428a27e3c49453cb6d5ad0b6f6eb43d4877a083e5d532f",
                          "typeString": "literal_string \"We need to unwrap at least 1\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "553:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "553:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "553:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "630:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "630:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "650:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LIBWrapper_$130",
                              "typeString": "contract LIBWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LIBWrapper_$130",
                              "typeString": "contract LIBWrapper"
                            }
                          ],
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "642:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "642:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "642:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 91,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "657:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 82,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "608:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1615,
                      "src": "608:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "608:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "681:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 94,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "667:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1942,
                      "src": "667:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "667:20:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "714:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "694:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "694:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "694:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "694:26:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "745:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "745:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 111,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "757:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 108,
                      "name": "LogLIBUnwrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "729:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "EmitStatement",
                  "src": "724:39:1"
                }
              ]
            },
            "functionSelector": "de0e9a3e",
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "530:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "529:12:1"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:1"
            },
            "scope": 130,
            "src": "514:253:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "798:14:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 118,
                      "name": "wrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "802:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:6:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "802:6:1"
                }
              ]
            },
            "id": 122,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "778:2:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:0:1"
            },
            "scope": 130,
            "src": "771:41:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "844:14:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 125,
                      "name": "wrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "848:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:6:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "848:6:1"
                }
              ]
            },
            "id": 129,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "824:2:1"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:1"
            },
            "scope": 130,
            "src": "816:42:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 131,
        "src": "105:756:1"
      }
    ],
    "src": "39:822:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIBWrapper.sol",
    "exportedSymbols": {
      "AccessControl": [
        813
      ],
      "Address": [
        2387
      ],
      "Context": [
        2410
      ],
      "ERC20": [
        1917
      ],
      "ERC20Burnable": [
        1976
      ],
      "ERC20Pausable": [
        2013
      ],
      "ERC20PresetMinterPauser": [
        1414
      ],
      "EnumerableSet": [
        2902
      ],
      "IERC20": [
        2091
      ],
      "LIB": [
        14
      ],
      "LIBWrapper": [
        130
      ],
      "Pausable": [
        2994
      ],
      "SafeMath": [
        1278
      ]
    },
    "id": 131,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:1"
      },
      {
        "id": 17,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:19:1"
      },
      {
        "absolutePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIB.sol",
        "file": "./LIB.sol",
        "id": 18,
        "nodeType": "ImportDirective",
        "scope": 131,
        "sourceUnit": 15,
        "src": "84:19:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          14
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 130,
        "linearizedBaseContracts": [
          130
        ],
        "name": "LIBWrapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1ba3192b",
            "id": 20,
            "mutability": "mutable",
            "name": "LIBToken",
            "nodeType": "VariableDeclaration",
            "scope": 130,
            "src": "128:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LIB_$14",
              "typeString": "contract LIB"
            },
            "typeName": {
              "id": 19,
              "name": "LIB",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14,
              "src": "128:3:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LIB_$14",
                "typeString": "contract LIB"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 26,
            "name": "LogLIBWrapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "178:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "178:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "194:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "177:32:1"
            },
            "src": "158:52:1"
          },
          {
            "anonymous": false,
            "id": 32,
            "name": "LogLIBUnwrapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "237:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "253:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "236:32:1"
            },
            "src": "215:54:1"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "293:34:1",
              "statements": [
                {
                  "expression": {
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "LIBToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "300:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$14",
                        "typeString": "contract LIB"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "311:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LIB_$14_$",
                          "typeString": "function () returns (contract LIB)"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "LIB",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 14,
                          "src": "315:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "311:9:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$14",
                        "typeString": "contract LIB"
                      }
                    },
                    "src": "300:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LIB_$14",
                      "typeString": "contract LIB"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "300:20:1"
                }
              ]
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:2:1"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:0:1"
            },
            "scope": 130,
            "src": "272:55:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "362:146:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "374:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "374:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "386:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "374:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5765206e65656420746f2077726170206174206c656173742031",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "389:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbce20a9b31517d228def20cff0e8f7f53f5c5d2d95f3ddd657b173c5b14dd63",
                          "typeString": "literal_string \"We need to wrap at least 1\""
                        },
                        "value": "We need to wrap at least 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbce20a9b31517d228def20cff0e8f7f53f5c5d2d95f3ddd657b173c5b14dd63",
                          "typeString": "literal_string \"We need to wrap at least 1\""
                        }
                      ],
                      "id": 45,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "366:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "366:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "366:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 56,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "437:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "437:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 58,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "449:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "449:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "423:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1358,
                      "src": "423:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "423:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "482:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "482:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 65,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "494:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "494:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62,
                      "name": "LogLIBWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "468:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "468:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "EmitStatement",
                  "src": "463:41:1"
                }
              ]
            },
            "functionSelector": "d46eb119",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:2:1"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:0:1"
            },
            "scope": 130,
            "src": "331:177:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "549:218:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 76,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "561:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "569:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "561:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5765206e65656420746f20756e77726170206174206c656173742031",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "572:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce4e9497dbbfa061a8428a27e3c49453cb6d5ad0b6f6eb43d4877a083e5d532f",
                          "typeString": "literal_string \"We need to unwrap at least 1\""
                        },
                        "value": "We need to unwrap at least 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce4e9497dbbfa061a8428a27e3c49453cb6d5ad0b6f6eb43d4877a083e5d532f",
                          "typeString": "literal_string \"We need to unwrap at least 1\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "553:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "553:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "553:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "630:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "630:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "650:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LIBWrapper_$130",
                              "typeString": "contract LIBWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LIBWrapper_$130",
                              "typeString": "contract LIBWrapper"
                            }
                          ],
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "642:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "642:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "642:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 91,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "657:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 82,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "608:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1615,
                      "src": "608:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "608:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "681:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 94,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "667:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1942,
                      "src": "667:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "667:20:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "714:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "694:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "694:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "694:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "694:26:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "745:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "745:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 111,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "757:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 108,
                      "name": "LogLIBUnwrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "729:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "EmitStatement",
                  "src": "724:39:1"
                }
              ]
            },
            "functionSelector": "de0e9a3e",
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "530:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "529:12:1"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:1"
            },
            "scope": 130,
            "src": "514:253:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "798:14:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 118,
                      "name": "wrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "802:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:6:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "802:6:1"
                }
              ]
            },
            "id": 122,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "778:2:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:0:1"
            },
            "scope": 130,
            "src": "771:41:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "844:14:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 125,
                      "name": "wrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "848:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:6:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "848:6:1"
                }
              ]
            },
            "id": 129,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "824:2:1"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:1"
            },
            "scope": 130,
            "src": "816:42:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 131,
        "src": "105:756:1"
      }
    ],
    "src": "39:822:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang",
    "optimizer": false,
    "runs": 200
  },
  "networks": {},
  "schemaVersion": "2.3.5",
  "updatedAt": "2021-04-28T13:38:24.448Z"
}