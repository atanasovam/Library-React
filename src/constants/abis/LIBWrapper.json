{
    "contractName": "LIBWrapper",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "libTokenAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "LogApprovedTx",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "LogLIBUnwrapped",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "LogLIBWrapped",
        "type": "event"
      },
      {
        "stateMutability": "payable",
        "type": "fallback"
      },
      {
        "inputs": [],
        "name": "LIBToken",
        "outputs": [
          {
            "internalType": "contract LIB",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "stateMutability": "payable",
        "type": "receive"
      },
      {
        "inputs": [],
        "name": "approve",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "wrap",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "unwrap",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": "0x608060405234801561001057600080fd5b506040516109f23803806109f28339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6108e48061010e6000396000f3fe6080604052600436106100435760003560e01c806312424e3f1461005c5780631ba3192b14610066578063d46eb11914610091578063de0e9a3e1461009b57610052565b36610052576100506100c4565b005b61005a6100c4565b005b610064610279565b005b34801561007257600080fd5b5061007b610362565b6040516100889190610769565b60405180910390f35b6100996100c4565b005b3480156100a757600080fd5b506100c260048036038101906100bd91906105ef565b610386565b005b60003411610107576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fe90610784565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933346040518363ffffffff1660e01b8152600401610162929190610740565b600060405180830381600087803b15801561017c57600080fd5b505af1158015610190573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101ed91906106ee565b60206040518083038186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023d9190610618565b507f9c1359f4b53f71481ac276ccdffa0cc71cd40491a5b8636617ecd8e25d42e2b8333460405161026f929190610740565b60405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333346040518363ffffffff1660e01b81526004016102d4929190610740565b602060405180830381600087803b1580156102ee57600080fd5b505af1158015610302573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032691906105c6565b507fde6a6e598b582450b6236b6ad7bb149509931d63c869d184ebdd9ea70446caf33334604051610358929190610740565b60405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081116103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c0906107a4565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161042693929190610709565b602060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047891906105c6565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b81526004016104d291906107c4565b600060405180830381600087803b1580156104ec57600080fd5b505af1158015610500573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561054a573d6000803e3d6000fd5b507f434a87dd0568dfbbb4bc8b6b51b072be25ff126809317b293b9ed43aaa84fd0e338260405161057c929190610740565b60405180910390a150565b60008151905061059681610880565b92915050565b6000813590506105ab81610897565b92915050565b6000815190506105c081610897565b92915050565b6000602082840312156105d857600080fd5b60006105e684828501610587565b91505092915050565b60006020828403121561060157600080fd5b600061060f8482850161059c565b91505092915050565b60006020828403121561062a57600080fd5b6000610638848285016105b1565b91505092915050565b61064a81610826565b82525050565b61065981610838565b82525050565b600061066c601a836107df565b91507f5765206e65656420746f2077726170206174206c6561737420310000000000006000830152602082019050919050565b60006106ac601c836107df565b91507f5765206e65656420746f20756e77726170206174206c656173742031000000006000830152602082019050919050565b6106e88161081c565b82525050565b60006020820190506107036000830184610641565b92915050565b600060608201905061071e6000830186610641565b61072b6020830185610641565b61073860408301846106df565b949350505050565b60006040820190506107556000830185610641565b61076260208301846106df565b9392505050565b600060208201905061077e6000830184610650565b92915050565b6000602082019050818103600083015261079d8161065f565b9050919050565b600060208201905081810360008301526107bd8161069f565b9050919050565b60006020820190506107d960008301846106df565b92915050565b600082825260208201905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108318261085c565b9050919050565b60006108438261084a565b9050919050565b6000610855826107fc565b9050919050565b60006108678261086e565b9050919050565b6000610879826107fc565b9050919050565b610889816107f0565b811461089457600080fd5b50565b6108a08161081c565b81146108ab57600080fd5b5056fea2646970667358221220806b0a98157b909e4d7ce5dc59badcc635b0cdb074e857fa581e2db9dc6fde2d64736f6c63430007050033",
    "deployedBytecode": "0x6080604052600436106100435760003560e01c806312424e3f1461005c5780631ba3192b14610066578063d46eb11914610091578063de0e9a3e1461009b57610052565b36610052576100506100c4565b005b61005a6100c4565b005b610064610279565b005b34801561007257600080fd5b5061007b610362565b6040516100889190610769565b60405180910390f35b6100996100c4565b005b3480156100a757600080fd5b506100c260048036038101906100bd91906105ef565b610386565b005b60003411610107576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fe90610784565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933346040518363ffffffff1660e01b8152600401610162929190610740565b600060405180830381600087803b15801561017c57600080fd5b505af1158015610190573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101ed91906106ee565b60206040518083038186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023d9190610618565b507f9c1359f4b53f71481ac276ccdffa0cc71cd40491a5b8636617ecd8e25d42e2b8333460405161026f929190610740565b60405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333346040518363ffffffff1660e01b81526004016102d4929190610740565b602060405180830381600087803b1580156102ee57600080fd5b505af1158015610302573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032691906105c6565b507fde6a6e598b582450b6236b6ad7bb149509931d63c869d184ebdd9ea70446caf33334604051610358929190610740565b60405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081116103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c0906107a4565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161042693929190610709565b602060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047891906105c6565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b81526004016104d291906107c4565b600060405180830381600087803b1580156104ec57600080fd5b505af1158015610500573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561054a573d6000803e3d6000fd5b507f434a87dd0568dfbbb4bc8b6b51b072be25ff126809317b293b9ed43aaa84fd0e338260405161057c929190610740565b60405180910390a150565b60008151905061059681610880565b92915050565b6000813590506105ab81610897565b92915050565b6000815190506105c081610897565b92915050565b6000602082840312156105d857600080fd5b60006105e684828501610587565b91505092915050565b60006020828403121561060157600080fd5b600061060f8482850161059c565b91505092915050565b60006020828403121561062a57600080fd5b6000610638848285016105b1565b91505092915050565b61064a81610826565b82525050565b61065981610838565b82525050565b600061066c601a836107df565b91507f5765206e65656420746f2077726170206174206c6561737420310000000000006000830152602082019050919050565b60006106ac601c836107df565b91507f5765206e65656420746f20756e77726170206174206c656173742031000000006000830152602082019050919050565b6106e88161081c565b82525050565b60006020820190506107036000830184610641565b92915050565b600060608201905061071e6000830186610641565b61072b6020830185610641565b61073860408301846106df565b949350505050565b60006040820190506107556000830185610641565b61076260208301846106df565b9392505050565b600060208201905061077e6000830184610650565b92915050565b6000602082019050818103600083015261079d8161065f565b9050919050565b600060208201905081810360008301526107bd8161069f565b9050919050565b60006020820190506107d960008301846106df565b92915050565b600082825260208201905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108318261085c565b9050919050565b60006108438261084a565b9050919050565b6000610855826107fc565b9050919050565b60006108678261086e565b9050919050565b6000610879826107fc565b9050919050565b610889816107f0565b811461089457600080fd5b50565b6108a08161081c565b81146108ab57600080fd5b5056fea2646970667358221220806b0a98157b909e4d7ce5dc59badcc635b0cdb074e857fa581e2db9dc6fde2d64736f6c63430007050033",
    "sourceMap": "105:1010:1:-:0;;;330:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;396:15;381:8;;:31;;;;;;;;;;;;;;;;;;330:89;105:1010;;7:143:15;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:282::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;333:1;357:64;413:7;404:6;393:9;389:22;357:64;:::i;:::-;347:74;;305:126;233:205;;;;:::o;444:96::-;;510:24;528:5;510:24;:::i;:::-;499:35;;489:51;;;:::o;546:126::-;;623:42;616:5;612:54;601:65;;591:81;;;:::o;678:122::-;751:24;769:5;751:24;:::i;:::-;744:5;741:35;731:2;;790:1;787;780:12;731:2;721:79;:::o;105:1010:1:-;;;;;;;",
    "deployedSourceMap": "105:1010:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:6;:4;:6::i;:::-;105:1010;;1102:6;:4;:6::i;:::-;105:1010;422:126;;;:::i;:::-;;129:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:211;;;:::i;:::-;;768:253;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;551:211;606:1;594:9;:13;586:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;643:8;;;;;;;;;;:13;;;657:10;669:9;643:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:8;;;;;;;;;;:18;;;702:10;683:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;722:36;736:10;748:9;722:36;;;;;;;:::i;:::-;;;;;;;;551:211::o;422:126::-;460:8;;;;;;;;;;:16;;;477:10;489:9;460:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;508:36;522:10;534:9;508:36;;;;;;;:::i;:::-;;;;;;;;422:126::o;129:19::-;;;;;;;;;;;;:::o;768:253::-;823:1;815:5;:9;807:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;862:8;;;;;;;;;;:21;;;884:10;904:4;911:5;862:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;921:8;;;;;;;;;;:13;;;935:5;921:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:10;:19;;:26;968:5;948:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;983:34;999:10;1011:5;983:34;;;;;;;:::i;:::-;;;;;;;;768:253;:::o;7:137:15:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:143::-;;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;358:80;;;;:::o;444:276::-;;560:2;548:9;539:7;535:23;531:32;528:2;;;576:1;573;566:12;528:2;618:1;642:61;695:7;686:6;675:9;671:22;642:61;:::i;:::-;632:71;;590:123;518:202;;;;:::o;726:260::-;;834:2;822:9;813:7;809:23;805:32;802:2;;;850:1;847;840:12;802:2;892:1;916:53;961:7;952:6;941:9;937:22;916:53;:::i;:::-;906:63;;864:115;792:194;;;;:::o;992:282::-;;1111:2;1099:9;1090:7;1086:23;1082:32;1079:2;;;1127:1;1124;1117:12;1079:2;1169:1;1193:64;1249:7;1240:6;1229:9;1225:22;1193:64;:::i;:::-;1183:74;;1141:126;1069:205;;;;:::o;1280:147::-;1375:45;1414:5;1375:45;:::i;:::-;1370:3;1363:58;1353:74;;:::o;1433:151::-;1530:47;1571:5;1530:47;:::i;:::-;1525:3;1518:60;1508:76;;:::o;1590:324::-;;1753:67;1817:2;1812:3;1753:67;:::i;:::-;1746:74;;1850:28;1846:1;1841:3;1837:11;1830:49;1905:2;1900:3;1896:12;1889:19;;1736:178;;;:::o;1920:326::-;;2083:67;2147:2;2142:3;2083:67;:::i;:::-;2076:74;;2180:30;2176:1;2171:3;2167:11;2160:51;2237:2;2232:3;2228:12;2221:19;;2066:180;;;:::o;2252:118::-;2339:24;2357:5;2339:24;:::i;:::-;2334:3;2327:37;2317:53;;:::o;2376:238::-;;2515:2;2504:9;2500:18;2492:26;;2528:79;2604:1;2593:9;2589:17;2580:6;2528:79;:::i;:::-;2482:132;;;;:::o;2620:474::-;;2823:2;2812:9;2808:18;2800:26;;2836:79;2912:1;2901:9;2897:17;2888:6;2836:79;:::i;:::-;2925:80;3001:2;2990:9;2986:18;2977:6;2925:80;:::i;:::-;3015:72;3083:2;3072:9;3068:18;3059:6;3015:72;:::i;:::-;2790:304;;;;;;:::o;3100:348::-;;3267:2;3256:9;3252:18;3244:26;;3280:79;3356:1;3345:9;3341:17;3332:6;3280:79;:::i;:::-;3369:72;3437:2;3426:9;3422:18;3413:6;3369:72;:::i;:::-;3234:214;;;;;:::o;3454:242::-;;3595:2;3584:9;3580:18;3572:26;;3608:81;3686:1;3675:9;3671:17;3662:6;3608:81;:::i;:::-;3562:134;;;;:::o;3702:419::-;;3906:2;3895:9;3891:18;3883:26;;3955:9;3949:4;3945:20;3941:1;3930:9;3926:17;3919:47;3983:131;4109:4;3983:131;:::i;:::-;3975:139;;3873:248;;;:::o;4127:419::-;;4331:2;4320:9;4316:18;4308:26;;4380:9;4374:4;4370:20;4366:1;4355:9;4351:17;4344:47;4408:131;4534:4;4408:131;:::i;:::-;4400:139;;4298:248;;;:::o;4552:222::-;;4683:2;4672:9;4668:18;4660:26;;4696:71;4764:1;4753:9;4749:17;4740:6;4696:71;:::i;:::-;4650:124;;;;:::o;4780:169::-;;4898:6;4893:3;4886:19;4938:4;4933:3;4929:14;4914:29;;4876:73;;;;:::o;4955:90::-;;5032:5;5025:13;5018:21;5007:32;;4997:48;;;:::o;5051:126::-;;5128:42;5121:5;5117:54;5106:65;;5096:81;;;:::o;5183:77::-;;5249:5;5238:16;;5228:32;;;:::o;5266:134::-;;5357:37;5388:5;5357:37;:::i;:::-;5344:50;;5334:66;;;:::o;5406:146::-;;5499:47;5540:5;5499:47;:::i;:::-;5486:60;;5476:76;;;:::o;5558:123::-;;5651:24;5669:5;5651:24;:::i;:::-;5638:37;;5628:53;;;:::o;5687:126::-;;5770:37;5801:5;5770:37;:::i;:::-;5757:50;;5747:66;;;:::o;5819:113::-;;5902:24;5920:5;5902:24;:::i;:::-;5889:37;;5879:53;;;:::o;5938:116::-;6008:21;6023:5;6008:21;:::i;:::-;6001:5;5998:32;5988:2;;6044:1;6041;6034:12;5988:2;5978:76;:::o;6060:122::-;6133:24;6151:5;6133:24;:::i;:::-;6126:5;6123:35;6113:2;;6172:1;6169;6162:12;6113:2;6103:79;:::o",
    "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.7.0;\npragma abicoder v2;\n\nimport \"./LIB.sol\";\n\ncontract LIBWrapper {\n\n\tLIB public LIBToken;\n    \n    event LogApprovedTx(address sender, uint256 amount);\n    event LogLIBWrapped(address sender, uint256 amount);\n    event LogLIBUnwrapped(address sender, uint256 amount);\n\n\tconstructor(address libTokenAddress) public {\n\t    LIBToken = LIB(libTokenAddress);\n    }\n\n\tfunction approve() public payable {\n\t\tLIBToken.approve(msg.sender, msg.value);\n\t\temit LogApprovedTx(msg.sender, msg.value);\n\t}\n\n\tfunction wrap() public payable {\n\t\trequire(msg.value > 0, \"We need to wrap at least 1\");\n\n\t\tLIBToken.mint(msg.sender, msg.value);\n\t\tLIBToken.balanceOf(msg.sender);\n\t\temit LogLIBWrapped(msg.sender, msg.value);\n\t}\n\n    function unwrap(uint value) public {\n\t\trequire(value > 0, \"We need to unwrap at least 1\");\n\n\t\tLIBToken.transferFrom(msg.sender, address(this), value);\n\t\tLIBToken.burn(value);\n\t\t\n\t\tmsg.sender.transfer(value);\n\t\temit LogLIBUnwrapped(msg.sender, value);\n\t}\n\n\t receive() external payable {\n\t\twrap();\n\t} \n\n\tfallback() external payable {\n\t\twrap();\n\t} \n}",
    "sourcePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIBWrapper.sol",
    "ast": {
      "absolutePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIBWrapper.sol",
      "exportedSymbols": {
        "AccessControl": [
          846
        ],
        "Address": [
          2420
        ],
        "Context": [
          2443
        ],
        "ERC20": [
          1950
        ],
        "ERC20Burnable": [
          2009
        ],
        "ERC20Pausable": [
          2046
        ],
        "ERC20PresetMinterPauser": [
          1447
        ],
        "EnumerableSet": [
          2935
        ],
        "IERC20": [
          2124
        ],
        "LIB": [
          14
        ],
        "LIBWrapper": [
          165
        ],
        "Pausable": [
          3027
        ],
        "SafeMath": [
          1311
        ]
      },
      "id": 166,
      "license": "UNLICENSED",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 16,
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "39:23:1"
        },
        {
          "id": 17,
          "literals": [
            "abicoder",
            "v2"
          ],
          "nodeType": "PragmaDirective",
          "src": "63:19:1"
        },
        {
          "absolutePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIB.sol",
          "file": "./LIB.sol",
          "id": 18,
          "nodeType": "ImportDirective",
          "scope": 166,
          "sourceUnit": 15,
          "src": "84:19:1",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [],
          "contractDependencies": [],
          "contractKind": "contract",
          "fullyImplemented": true,
          "id": 165,
          "linearizedBaseContracts": [
            165
          ],
          "name": "LIBWrapper",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "functionSelector": "1ba3192b",
              "id": 20,
              "mutability": "mutable",
              "name": "LIBToken",
              "nodeType": "VariableDeclaration",
              "scope": 165,
              "src": "129:19:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LIB_$14",
                "typeString": "contract LIB"
              },
              "typeName": {
                "id": 19,
                "name": "LIB",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 14,
                "src": "129:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_LIB_$14",
                  "typeString": "contract LIB"
                }
              },
              "visibility": "public"
            },
            {
              "anonymous": false,
              "id": 26,
              "name": "LogApprovedTx",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 25,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 22,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "sender",
                    "nodeType": "VariableDeclaration",
                    "scope": 26,
                    "src": "179:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 21,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "179:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 24,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nodeType": "VariableDeclaration",
                    "scope": 26,
                    "src": "195:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 23,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "195:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "178:32:1"
              },
              "src": "159:52:1"
            },
            {
              "anonymous": false,
              "id": 32,
              "name": "LogLIBWrapped",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 31,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 28,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "sender",
                    "nodeType": "VariableDeclaration",
                    "scope": 32,
                    "src": "236:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 27,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "236:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nodeType": "VariableDeclaration",
                    "scope": 32,
                    "src": "252:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 29,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "252:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "235:32:1"
              },
              "src": "216:52:1"
            },
            {
              "anonymous": false,
              "id": 38,
              "name": "LogLIBUnwrapped",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 37,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 34,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "sender",
                    "nodeType": "VariableDeclaration",
                    "scope": 38,
                    "src": "295:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 33,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "295:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 36,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nodeType": "VariableDeclaration",
                    "scope": 38,
                    "src": "311:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 35,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "311:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "294:32:1"
              },
              "src": "273:54:1"
            },
            {
              "body": {
                "id": 49,
                "nodeType": "Block",
                "src": "374:45:1",
                "statements": [
                  {
                    "expression": {
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 43,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "381:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 45,
                            "name": "libTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "396:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 44,
                          "name": "LIB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "392:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LIB_$14_$",
                            "typeString": "type(contract LIB)"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "392:20:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "src": "381:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$14",
                        "typeString": "contract LIB"
                      }
                    },
                    "id": 48,
                    "nodeType": "ExpressionStatement",
                    "src": "381:31:1"
                  }
                ]
              },
              "id": 50,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 41,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 40,
                    "mutability": "mutable",
                    "name": "libTokenAddress",
                    "nodeType": "VariableDeclaration",
                    "scope": 50,
                    "src": "342:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 39,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "342:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "341:25:1"
              },
              "returnParameters": {
                "id": 42,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "374:0:1"
              },
              "scope": 165,
              "src": "330:89:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 69,
                "nodeType": "Block",
                "src": "456:92:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 56,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "477:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "477:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 58,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "489:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "489:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 53,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "460:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1610,
                        "src": "460:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "460:39:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 61,
                    "nodeType": "ExpressionStatement",
                    "src": "460:39:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 63,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "522:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "522:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 65,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "534:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "534:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 62,
                        "name": "LogApprovedTx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "508:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "508:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 68,
                    "nodeType": "EmitStatement",
                    "src": "503:41:1"
                  }
                ]
              },
              "functionSelector": "12424e3f",
              "id": 70,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "approve",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 51,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "438:2:1"
              },
              "returnParameters": {
                "id": 52,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "456:0:1"
              },
              "scope": 165,
              "src": "422:126:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 104,
                "nodeType": "Block",
                "src": "582:180:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 74,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "594:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "594:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "606:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "594:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5765206e65656420746f2077726170206174206c656173742031",
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "609:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cbce20a9b31517d228def20cff0e8f7f53f5c5d2d95f3ddd657b173c5b14dd63",
                            "typeString": "literal_string \"We need to wrap at least 1\""
                          },
                          "value": "We need to wrap at least 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_cbce20a9b31517d228def20cff0e8f7f53f5c5d2d95f3ddd657b173c5b14dd63",
                            "typeString": "literal_string \"We need to wrap at least 1\""
                          }
                        ],
                        "id": 73,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "586:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "586:52:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80,
                    "nodeType": "ExpressionStatement",
                    "src": "586:52:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 84,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "657:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "657:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 86,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "669:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "669:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 81,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "643:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1391,
                        "src": "643:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "643:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 89,
                    "nodeType": "ExpressionStatement",
                    "src": "643:36:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "702:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "702:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 90,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "683:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1550,
                        "src": "683:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "683:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 96,
                    "nodeType": "ExpressionStatement",
                    "src": "683:30:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 98,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "736:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "736:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 100,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "748:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "748:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 97,
                        "name": "LogLIBWrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "722:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "722:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 103,
                    "nodeType": "EmitStatement",
                    "src": "717:41:1"
                  }
                ]
              },
              "functionSelector": "d46eb119",
              "id": 105,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "wrap",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 71,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "564:2:1"
              },
              "returnParameters": {
                "id": 72,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "582:0:1"
              },
              "scope": 165,
              "src": "551:211:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 149,
                "nodeType": "Block",
                "src": "803:218:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 111,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "815:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "823:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "815:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5765206e65656420746f20756e77726170206174206c656173742031",
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ce4e9497dbbfa061a8428a27e3c49453cb6d5ad0b6f6eb43d4877a083e5d532f",
                            "typeString": "literal_string \"We need to unwrap at least 1\""
                          },
                          "value": "We need to unwrap at least 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ce4e9497dbbfa061a8428a27e3c49453cb6d5ad0b6f6eb43d4877a083e5d532f",
                            "typeString": "literal_string \"We need to unwrap at least 1\""
                          }
                        ],
                        "id": 110,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "807:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "807:50:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 116,
                    "nodeType": "ExpressionStatement",
                    "src": "807:50:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "884:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "884:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 124,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "904:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LIBWrapper_$165",
                                "typeString": "contract LIBWrapper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LIBWrapper_$165",
                                "typeString": "contract LIBWrapper"
                              }
                            ],
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "896:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 122,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "896:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "896:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 126,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "911:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 117,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "862:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1648,
                        "src": "862:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "862:55:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 128,
                    "nodeType": "ExpressionStatement",
                    "src": "862:55:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 132,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "935:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 129,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "921:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1975,
                        "src": "921:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "921:20:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 134,
                    "nodeType": "ExpressionStatement",
                    "src": "921:20:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 140,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "968:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 135,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "948:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "948:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "948:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "948:26:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 142,
                    "nodeType": "ExpressionStatement",
                    "src": "948:26:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "999:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "999:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 146,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "1011:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 143,
                        "name": "LogLIBUnwrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "983:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "983:34:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 148,
                    "nodeType": "EmitStatement",
                    "src": "978:39:1"
                  }
                ]
              },
              "functionSelector": "de0e9a3e",
              "id": 150,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "unwrap",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 108,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 107,
                    "mutability": "mutable",
                    "name": "value",
                    "nodeType": "VariableDeclaration",
                    "scope": 150,
                    "src": "784:10:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 106,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "784:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "783:12:1"
              },
              "returnParameters": {
                "id": 109,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "803:0:1"
              },
              "scope": 165,
              "src": "768:253:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 156,
                "nodeType": "Block",
                "src": "1052:14:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 153,
                        "name": "wrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1056:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1056:6:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 155,
                    "nodeType": "ExpressionStatement",
                    "src": "1056:6:1"
                  }
                ]
              },
              "id": 157,
              "implemented": true,
              "kind": "receive",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 151,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1032:2:1"
              },
              "returnParameters": {
                "id": 152,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1052:0:1"
              },
              "scope": 165,
              "src": "1025:41:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 163,
                "nodeType": "Block",
                "src": "1098:14:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 160,
                        "name": "wrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1102:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1102:6:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 162,
                    "nodeType": "ExpressionStatement",
                    "src": "1102:6:1"
                  }
                ]
              },
              "id": 164,
              "implemented": true,
              "kind": "fallback",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 158,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1078:2:1"
              },
              "returnParameters": {
                "id": 159,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1098:0:1"
              },
              "scope": 165,
              "src": "1070:42:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 166,
          "src": "105:1010:1"
        }
      ],
      "src": "39:1076:1"
    },
    "legacyAST": {
      "absolutePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIBWrapper.sol",
      "exportedSymbols": {
        "AccessControl": [
          846
        ],
        "Address": [
          2420
        ],
        "Context": [
          2443
        ],
        "ERC20": [
          1950
        ],
        "ERC20Burnable": [
          2009
        ],
        "ERC20Pausable": [
          2046
        ],
        "ERC20PresetMinterPauser": [
          1447
        ],
        "EnumerableSet": [
          2935
        ],
        "IERC20": [
          2124
        ],
        "LIB": [
          14
        ],
        "LIBWrapper": [
          165
        ],
        "Pausable": [
          3027
        ],
        "SafeMath": [
          1311
        ]
      },
      "id": 166,
      "license": "UNLICENSED",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 16,
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "39:23:1"
        },
        {
          "id": 17,
          "literals": [
            "abicoder",
            "v2"
          ],
          "nodeType": "PragmaDirective",
          "src": "63:19:1"
        },
        {
          "absolutePath": "/Users/milenaatanasova/Documents/onboarding/LimeChain-onboarding/Library/contracts/LIB.sol",
          "file": "./LIB.sol",
          "id": 18,
          "nodeType": "ImportDirective",
          "scope": 166,
          "sourceUnit": 15,
          "src": "84:19:1",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [],
          "contractDependencies": [],
          "contractKind": "contract",
          "fullyImplemented": true,
          "id": 165,
          "linearizedBaseContracts": [
            165
          ],
          "name": "LIBWrapper",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "functionSelector": "1ba3192b",
              "id": 20,
              "mutability": "mutable",
              "name": "LIBToken",
              "nodeType": "VariableDeclaration",
              "scope": 165,
              "src": "129:19:1",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LIB_$14",
                "typeString": "contract LIB"
              },
              "typeName": {
                "id": 19,
                "name": "LIB",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 14,
                "src": "129:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_LIB_$14",
                  "typeString": "contract LIB"
                }
              },
              "visibility": "public"
            },
            {
              "anonymous": false,
              "id": 26,
              "name": "LogApprovedTx",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 25,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 22,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "sender",
                    "nodeType": "VariableDeclaration",
                    "scope": 26,
                    "src": "179:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 21,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "179:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 24,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nodeType": "VariableDeclaration",
                    "scope": 26,
                    "src": "195:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 23,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "195:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "178:32:1"
              },
              "src": "159:52:1"
            },
            {
              "anonymous": false,
              "id": 32,
              "name": "LogLIBWrapped",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 31,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 28,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "sender",
                    "nodeType": "VariableDeclaration",
                    "scope": 32,
                    "src": "236:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 27,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "236:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 30,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nodeType": "VariableDeclaration",
                    "scope": 32,
                    "src": "252:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 29,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "252:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "235:32:1"
              },
              "src": "216:52:1"
            },
            {
              "anonymous": false,
              "id": 38,
              "name": "LogLIBUnwrapped",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 37,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 34,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "sender",
                    "nodeType": "VariableDeclaration",
                    "scope": 38,
                    "src": "295:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 33,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "295:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 36,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nodeType": "VariableDeclaration",
                    "scope": 38,
                    "src": "311:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 35,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "311:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "294:32:1"
              },
              "src": "273:54:1"
            },
            {
              "body": {
                "id": 49,
                "nodeType": "Block",
                "src": "374:45:1",
                "statements": [
                  {
                    "expression": {
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 43,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "381:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 45,
                            "name": "libTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "396:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 44,
                          "name": "LIB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "392:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LIB_$14_$",
                            "typeString": "type(contract LIB)"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "392:20:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$14",
                          "typeString": "contract LIB"
                        }
                      },
                      "src": "381:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$14",
                        "typeString": "contract LIB"
                      }
                    },
                    "id": 48,
                    "nodeType": "ExpressionStatement",
                    "src": "381:31:1"
                  }
                ]
              },
              "id": 50,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 41,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 40,
                    "mutability": "mutable",
                    "name": "libTokenAddress",
                    "nodeType": "VariableDeclaration",
                    "scope": 50,
                    "src": "342:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 39,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "342:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "341:25:1"
              },
              "returnParameters": {
                "id": 42,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "374:0:1"
              },
              "scope": 165,
              "src": "330:89:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 69,
                "nodeType": "Block",
                "src": "456:92:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 56,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "477:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "477:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 58,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "489:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "489:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 53,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "460:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1610,
                        "src": "460:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "460:39:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 61,
                    "nodeType": "ExpressionStatement",
                    "src": "460:39:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 63,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "522:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "522:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 65,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "534:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "534:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 62,
                        "name": "LogApprovedTx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "508:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "508:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 68,
                    "nodeType": "EmitStatement",
                    "src": "503:41:1"
                  }
                ]
              },
              "functionSelector": "12424e3f",
              "id": 70,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "approve",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 51,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "438:2:1"
              },
              "returnParameters": {
                "id": 52,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "456:0:1"
              },
              "scope": 165,
              "src": "422:126:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 104,
                "nodeType": "Block",
                "src": "582:180:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 74,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "594:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "594:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "606:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "594:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5765206e65656420746f2077726170206174206c656173742031",
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "609:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_cbce20a9b31517d228def20cff0e8f7f53f5c5d2d95f3ddd657b173c5b14dd63",
                            "typeString": "literal_string \"We need to wrap at least 1\""
                          },
                          "value": "We need to wrap at least 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_cbce20a9b31517d228def20cff0e8f7f53f5c5d2d95f3ddd657b173c5b14dd63",
                            "typeString": "literal_string \"We need to wrap at least 1\""
                          }
                        ],
                        "id": 73,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "586:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "586:52:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80,
                    "nodeType": "ExpressionStatement",
                    "src": "586:52:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 84,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "657:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "657:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 86,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "669:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "669:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 81,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "643:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1391,
                        "src": "643:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "643:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 89,
                    "nodeType": "ExpressionStatement",
                    "src": "643:36:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "702:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "702:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 90,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "683:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1550,
                        "src": "683:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "683:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 96,
                    "nodeType": "ExpressionStatement",
                    "src": "683:30:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 98,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "736:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "736:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 100,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "748:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "748:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 97,
                        "name": "LogLIBWrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "722:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "722:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 103,
                    "nodeType": "EmitStatement",
                    "src": "717:41:1"
                  }
                ]
              },
              "functionSelector": "d46eb119",
              "id": 105,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "wrap",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 71,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "564:2:1"
              },
              "returnParameters": {
                "id": 72,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "582:0:1"
              },
              "scope": 165,
              "src": "551:211:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 149,
                "nodeType": "Block",
                "src": "803:218:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 111,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "815:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "823:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "815:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5765206e65656420746f20756e77726170206174206c656173742031",
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ce4e9497dbbfa061a8428a27e3c49453cb6d5ad0b6f6eb43d4877a083e5d532f",
                            "typeString": "literal_string \"We need to unwrap at least 1\""
                          },
                          "value": "We need to unwrap at least 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ce4e9497dbbfa061a8428a27e3c49453cb6d5ad0b6f6eb43d4877a083e5d532f",
                            "typeString": "literal_string \"We need to unwrap at least 1\""
                          }
                        ],
                        "id": 110,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "807:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "807:50:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 116,
                    "nodeType": "ExpressionStatement",
                    "src": "807:50:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "884:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "884:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 124,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "904:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LIBWrapper_$165",
                                "typeString": "contract LIBWrapper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LIBWrapper_$165",
                                "typeString": "contract LIBWrapper"
                              }
                            ],
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "896:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 122,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "896:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "896:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 126,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "911:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 117,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "862:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1648,
                        "src": "862:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "862:55:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 128,
                    "nodeType": "ExpressionStatement",
                    "src": "862:55:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 132,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "935:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 129,
                          "name": "LIBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "921:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$14",
                            "typeString": "contract LIB"
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1975,
                        "src": "921:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "921:20:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 134,
                    "nodeType": "ExpressionStatement",
                    "src": "921:20:1"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 140,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "968:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 135,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "948:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "948:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "948:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "948:26:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 142,
                    "nodeType": "ExpressionStatement",
                    "src": "948:26:1"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "999:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "999:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 146,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "1011:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 143,
                        "name": "LogLIBUnwrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "983:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "983:34:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 148,
                    "nodeType": "EmitStatement",
                    "src": "978:39:1"
                  }
                ]
              },
              "functionSelector": "de0e9a3e",
              "id": 150,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "unwrap",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 108,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 107,
                    "mutability": "mutable",
                    "name": "value",
                    "nodeType": "VariableDeclaration",
                    "scope": 150,
                    "src": "784:10:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 106,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "784:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "783:12:1"
              },
              "returnParameters": {
                "id": 109,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "803:0:1"
              },
              "scope": 165,
              "src": "768:253:1",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 156,
                "nodeType": "Block",
                "src": "1052:14:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 153,
                        "name": "wrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1056:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1056:6:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 155,
                    "nodeType": "ExpressionStatement",
                    "src": "1056:6:1"
                  }
                ]
              },
              "id": 157,
              "implemented": true,
              "kind": "receive",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 151,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1032:2:1"
              },
              "returnParameters": {
                "id": 152,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1052:0:1"
              },
              "scope": 165,
              "src": "1025:41:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 163,
                "nodeType": "Block",
                "src": "1098:14:1",
                "statements": [
                  {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 160,
                        "name": "wrap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1102:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1102:6:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 162,
                    "nodeType": "ExpressionStatement",
                    "src": "1102:6:1"
                  }
                ]
              },
              "id": 164,
              "implemented": true,
              "kind": "fallback",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 158,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1078:2:1"
              },
              "returnParameters": {
                "id": 159,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1098:0:1"
              },
              "scope": 165,
              "src": "1070:42:1",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "scope": 166,
          "src": "105:1010:1"
        }
      ],
      "src": "39:1076:1"
    },
    "compiler": {
      "name": "solc",
      "version": "0.7.5+commit.eb77ed08.Emscripten.clang",
      "optimizer": false,
      "runs": 200
    },
    "networks": {},
    "schemaVersion": "2.3.5",
    "updatedAt": "2021-04-28T07:49:15.962Z"
  }